-- Dong Chen & Weiqing Huang
-- Project 2 Database Create Part

-- Data website: https://www.kaggle.com/usdot/flight-delays

# Create database and set default
DROP DATABASE IF EXISTS flight_delays;
CREATE DATABASE flight_delays;
USE flight_delays;

# Create flights table
DROP TABLE IF EXISTS flights;
CREATE TABLE IF NOT EXISTS flights(
	YEAR VARCHAR(100),
    MONTH VARCHAR(100),
    DAY VARCHAR(100),
    DAY_OF_WEEK VARCHAR(100),
    AIRLINE VARCHAR(100),
    FLIGHT_NUMBER VARCHAR(100),
    TAIL_NUMBER VARCHAR(100),
    ORIGIN_AIRPORT VARCHAR(100),
    DESTINATION_AIRPORT VARCHAR(100),
    SCHEDULED_DEPARTURE VARCHAR(100),
    DEPARTURE_TIME VARCHAR(100),
    DEPARTURE_DELAY VARCHAR(100),
    TAXI_OUT VARCHAR(100),
    WHEELS_OFF VARCHAR(100),
    SCHEDULED_TIME VARCHAR(100),
    ELAPSED_TIME VARCHAR(100),
    AIR_TIME VARCHAR(100),
    DISTANCE VARCHAR(100),
    WHEELS_ON VARCHAR(100),
    TAXI_IN VARCHAR(100),
    SCHEDULED_ARRIVAL VARCHAR(100),
    ARRIVAL_TIME VARCHAR(100),
    ARRIVAL_DELAY VARCHAR(100),
    DIVERTED VARCHAR(100),
    CANCELLED VARCHAR(100),
    CANCELLATION_REASON VARCHAR(100),
    AIR_SYSTEM_DELAY VARCHAR(100),
    SECURITY_DELAY VARCHAR(100),
    AIRLINE_DELAY VARCHAR(100),
    LATE_AIRCRAFT_DELAY VARCHAR(100),
    WEATHER_DELAY VARCHAR(100)
);

# Load the data into the table
-- If we use the whole dataset, we choose the file name flights.csv
LOAD DATA INFILE 'C:/wamp64/tmp/flights_sample.csv'
INTO TABLE flights
FIELDS TERMINATED BY ','
ENCLOSED BY '"'
LINES TERMINATED BY '\n'
IGNORE 1 LINES;

# Create airports table
DROP TABLE IF EXISTS airports;
CREATE TABLE IF NOT EXISTS airports(
	IATA_CODE VARCHAR(100),
    AIRPORT VARCHAR(100),
    CITY VARCHAR(100),
    STATE VARCHAR(100),
    COUNTRY VARCHAR(100),
    LATITUDE VARCHAR(100),
    LONGITUDE VARCHAR(100),
    PRIMARY KEY (IATA_CODE) # set primary key
);

# Load the data into the table
LOAD DATA INFILE 'C:/wamp64/tmp/airports.csv'
INTO TABLE airports
FIELDS TERMINATED BY ','
ENCLOSED BY '"'
LINES TERMINATED BY '\n'
IGNORE 1 LINES;


# Create airlines table
DROP TABLE IF EXISTS airlines;
CREATE TABLE IF NOT EXISTS airlines(
	IATA_CODE VARCHAR(100),
    AIRLINE VARCHAR(100),
    PRIMARY KEY (IATA_CODE) # set primary key
);

# Load the data into the table
LOAD DATA INFILE 'C:/wamp64/tmp/airlines.csv'
INTO TABLE airlines
FIELDS TERMINATED BY ','
ENCLOSED BY '"'
LINES TERMINATED BY '\n'
IGNORE 1 LINES;

# Decompose Part

# Create schedule_info table
SET foreign_key_checks=0;
DROP TABLE IF EXISTS schedule_info;
CREATE TABLE IF NOT EXISTS schedule_info(
	YEAR INT,
    MONTH INT,
    DAY INT,
    AIRLINE VARCHAR(100),
    FLIGHT_NUMBER INT,
    ORIGIN_AIRPORT VARCHAR(100),
    DESTINATION_AIRPORT VARCHAR(100),
    SCHEDULED_DEPARTURE TIME,
    DISTANCE INT,
    SCHEDULED_ARRIVAL TIME,
    PRIMARY KEY (MONTH, DAY, AIRLINE, FLIGHT_NUMBER, ORIGIN_AIRPORT, DESTINATION_AIRPORT), # set primary key 
    CONSTRAINT fk_IATA1 FOREIGN KEY (AIRLINE) #set foreign key and constraint
		REFERENCES airlines (IATA_CODE)
        ON DELETE CASCADE
        ON UPDATE CASCADE,
	CONSTRAINT fk_IATA2 FOREIGN KEY (ORIGIN_AIRPORT) #set foreign key and constraint
		REFERENCES airports (IATA_CODE)
        ON DELETE CASCADE
        ON UPDATE CASCADE,
	CONSTRAINT fk_IATA3 FOREIGN KEY (DESTINATION_AIRPORT) #set foreign key and constraint
		REFERENCES airports (IATA_CODE)
        ON DELETE CASCADE
        ON UPDATE CASCADE
);

# Create date_info table
DROP TABLE IF EXISTS date_info;
CREATE TABLE IF NOT EXISTS date_info(
	MONTH INT,
    DAY INT,
    DAY_OF_WEEK INT,
    PRIMARY KEY (MONTH, DAY), # set primary key 
    CONSTRAINT fk_date_info FOREIGN KEY (MONTH, DAY) #set foreign key and constraint
		REFERENCES schedule_info (MONTH, DAY)
        ON DELETE CASCADE
        ON UPDATE CASCADE
);

# Create flight_info table
DROP TABLE IF EXISTS flight_info;
ALTER TABLE flights 
ADD INDEX (AIRLINE,FLIGHT_NUMBER,TAIL_NUMBER);
ALTER TABLE schedule_info 
ADD INDEX (AIRLINE,FLIGHT_NUMBER);
CREATE TABLE IF NOT EXISTS flight_info(
    AIRLINE VARCHAR(100),
    FLIGHT_NUMBER INT,
    TAIL_NUMBER VARCHAR(100),
    PRIMARY KEY (AIRLINE,FLIGHT_NUMBER,TAIL_NUMBER), # set primary key 
    CONSTRAINT fk_flight_info FOREIGN KEY (AIRLINE,FLIGHT_NUMBER) #set foreign key and constraint
		REFERENCES schedule_info (AIRLINE,FLIGHT_NUMBER)
        ON DELETE CASCADE
        ON UPDATE CASCADE
);

# Create scheduled_time_info table
DROP TABLE IF EXISTS scheduled_time_info;
ALTER TABLE flights 
ADD INDEX (SCHEDULED_DEPARTURE,SCHEDULED_ARRIVAL,SCHEDULED_TIME);
ALTER TABLE schedule_info 
ADD INDEX (SCHEDULED_DEPARTURE,SCHEDULED_ARRIVAL);
CREATE TABLE IF NOT EXISTS scheduled_time_info(
    SCHEDULED_DEPARTURE TIME,
    SCHEDULED_ARRIVAL TIME,
    SCHEDULED_TIME INT,
    PRIMARY KEY (SCHEDULED_DEPARTURE,SCHEDULED_ARRIVAL,SCHEDULED_TIME), # set primary key 
    CONSTRAINT fk_scheduled_time_info FOREIGN KEY (SCHEDULED_DEPARTURE,SCHEDULED_ARRIVAL) #set foreign key and constraint
		REFERENCES schedule_info (SCHEDULED_DEPARTURE,SCHEDULED_ARRIVAL)
        ON DELETE CASCADE
        ON UPDATE CASCADE
);

# Create real_info table
DROP TABLE IF EXISTS real_info;
CREATE TABLE IF NOT EXISTS real_info(
	MONTH INT, 
    DAY INT, 
    AIRLINE VARCHAR(100), 
    FLIGHT_NUMBER INT, 
    ORIGIN_AIRPORT VARCHAR(100), 
    DESTINATION_AIRPORT VARCHAR(100), 
    DEPARTURE_TIME TIME, 
    WHEELS_OFF TIME, 
    WHEELS_ON TIME, 
    ARRIVAL_TIME TIME,
    PRIMARY KEY (MONTH, DAY, AIRLINE, FLIGHT_NUMBER, ORIGIN_AIRPORT, DESTINATION_AIRPORT,DEPARTURE_TIME, WHEELS_OFF), # set primary key
    CONSTRAINT fk_real_info FOREIGN KEY (MONTH, DAY, AIRLINE, FLIGHT_NUMBER, ORIGIN_AIRPORT, DESTINATION_AIRPORT) #set foreign key and constraint
		REFERENCES schedule_info (MONTH, DAY, AIRLINE, FLIGHT_NUMBER, ORIGIN_AIRPORT, DESTINATION_AIRPORT)
        ON DELETE CASCADE
        ON UPDATE CASCADE
);

# Create taxi_out_interval table
DROP TABLE IF EXISTS taxi_out_interval;
ALTER TABLE flights 
ADD INDEX (DEPARTURE_TIME, WHEELS_OFF,TAXI_OUT);
ALTER TABLE real_info 
ADD INDEX real_info (DEPARTURE_TIME, WHEELS_OFF);
CREATE TABLE IF NOT EXISTS taxi_out_interval(
	DEPARTURE_TIME TIME, 
    WHEELS_OFF TIME, 
    TAXI_OUT INT,
    PRIMARY KEY (DEPARTURE_TIME, WHEELS_OFF,TAXI_OUT), # set primary key
    CONSTRAINT fk_taxi_out_interval FOREIGN KEY (DEPARTURE_TIME, WHEELS_OFF) #set foreign key and constraint
		REFERENCES real_info (DEPARTURE_TIME, WHEELS_OFF)
        ON DELETE CASCADE
        ON UPDATE CASCADE
);

# Create taxi_in_interval table
DROP TABLE IF EXISTS taxi_in_interval;
ALTER TABLE flights 
ADD INDEX (WHEELS_ON, ARRIVAL_TIME,TAXI_IN);
ALTER TABLE real_info
ADD INDEX (WHEELS_ON, ARRIVAL_TIME);
CREATE TABLE IF NOT EXISTS taxi_in_interval(
	WHEELS_ON TIME, 
    ARRIVAL_TIME TIME, 
    TAXI_IN INT,
    PRIMARY KEY (WHEELS_ON, ARRIVAL_TIME,TAXI_IN), # set primary key
    CONSTRAINT fk_taxi_in_interval FOREIGN KEY (WHEELS_ON, ARRIVAL_TIME) #set foreign key and constraint
		REFERENCES real_info (WHEELS_ON, ARRIVAL_TIME)
        ON DELETE CASCADE
        ON UPDATE CASCADE
);

# Create air_time_interval table
DROP TABLE IF EXISTS air_time_interval;
ALTER TABLE flights 
ADD INDEX (WHEELS_OFF,WHEELS_ON,AIR_TIME);
ALTER TABLE real_info
ADD INDEX (WHEELS_OFF,WHEELS_ON);
CREATE TABLE IF NOT EXISTS air_time_interval(
	WHEELS_OFF TIME,
	WHEELS_ON TIME, 
    AIR_TIME INT,
    PRIMARY KEY (WHEELS_OFF,WHEELS_ON,AIR_TIME), # set primary key
    CONSTRAINT fk_air_time_interval FOREIGN KEY (WHEELS_OFF,WHEELS_ON) #set foreign key and constraint
		REFERENCES real_info (WHEELS_OFF,WHEELS_ON)
        ON DELETE CASCADE
        ON UPDATE CASCADE
);

# Create elapsed_time_interval table
DROP TABLE IF EXISTS elapsed_time_interval;
ALTER TABLE flights 
ADD INDEX (TAXI_OUT,AIR_TIME,TAXI_IN,ELAPSED_TIME);
ALTER TABLE taxi_out_interval 
ADD INDEX (TAXI_OUT);
ALTER TABLE taxi_in_interval 
ADD INDEX (TAXI_IN);
ALTER TABLE air_time_interval 
ADD INDEX (AIR_TIME);
CREATE TABLE IF NOT EXISTS elapsed_time_interval(
	TAXI_OUT INT, 
    AIR_TIME INT, 
    TAXI_IN INT, 
    ELAPSED_TIME INT,
    PRIMARY KEY (TAXI_OUT,AIR_TIME,TAXI_IN,ELAPSED_TIME), # set primary key
    CONSTRAINT fk_elapsed_time_interval1 FOREIGN KEY (TAXI_OUT) #set foreign key and constraint
		REFERENCES taxi_out_interval (TAXI_OUT)
        ON DELETE CASCADE
        ON UPDATE CASCADE,
	CONSTRAINT fk_elapsed_time_interval2 FOREIGN KEY (AIR_TIME) #set foreign key and constraint
		REFERENCES air_time_interval (AIR_TIME)
        ON DELETE CASCADE
        ON UPDATE CASCADE,
	CONSTRAINT fk_elapsed_time_interval3 FOREIGN KEY (TAXI_IN) #set foreign key and constraint
		REFERENCES taxi_in_interval (TAXI_IN)
        ON DELETE CASCADE
        ON UPDATE CASCADE
);

# Create departure_delay table
DROP TABLE IF EXISTS departure_delay;
ALTER TABLE flights 
ADD INDEX (SCHEDULED_DEPARTURE,DEPARTURE_TIME,DEPARTURE_DELAY);
ALTER TABLE schedule_info 
ADD INDEX (SCHEDULED_DEPARTURE);
ALTER TABLE real_info 
ADD INDEX (DEPARTURE_TIME);
CREATE TABLE IF NOT EXISTS departure_delay(
	SCHEDULED_DEPARTURE TIME, 
    DEPARTURE_TIME TIME, 
    DEPARTURE_DELAY INT,
    PRIMARY KEY (SCHEDULED_DEPARTURE, DEPARTURE_TIME,DEPARTURE_DELAY), # set primary key
    CONSTRAINT fk_departure_delay1 FOREIGN KEY (SCHEDULED_DEPARTURE) #set foreign key and constraint
		REFERENCES schedule_info (SCHEDULED_DEPARTURE)
        ON DELETE CASCADE
        ON UPDATE CASCADE,
	CONSTRAINT fk_departure_delay2 FOREIGN KEY (DEPARTURE_TIME) #set foreign key and constraint
		REFERENCES real_info (DEPARTURE_TIME)
        ON DELETE CASCADE
        ON UPDATE CASCADE
);

# Create arrival_delay table
DROP TABLE IF EXISTS arrival_delay;
ALTER TABLE flights 
ADD INDEX (SCHEDULED_ARRIVAL, ARRIVAL_TIME,ARRIVAL_DELAY);
ALTER TABLE schedule_info
ADD INDEX (SCHEDULED_ARRIVAL);
ALTER TABLE real_info 
ADD INDEX ( ARRIVAL_TIME);
CREATE TABLE IF NOT EXISTS arrival_delay(
	SCHEDULED_ARRIVAL TIME, 
    ARRIVAL_TIME TIME, 
    ARRIVAL_DELAY INT,
    PRIMARY KEY (SCHEDULED_ARRIVAL, ARRIVAL_TIME,ARRIVAL_DELAY), # set primary key
    CONSTRAINT fk_arrival_delay1 FOREIGN KEY (SCHEDULED_ARRIVAL) #set foreign key and constraint
		REFERENCES schedule_info (SCHEDULED_ARRIVAL)
        ON DELETE CASCADE
        ON UPDATE CASCADE,
	CONSTRAINT fk_arrival_delay2 FOREIGN KEY (ARRIVAL_TIME) #set foreign key and constraint
		REFERENCES real_info (ARRIVAL_TIME)
        ON DELETE CASCADE
        ON UPDATE CASCADE
);

# Create diverted_info table
DROP TABLE IF EXISTS diverted_info;
CREATE TABLE IF NOT EXISTS diverted_info(
	MONTH INT, 
    DAY INT, 
    AIRLINE VARCHAR(100), 
    FLIGHT_NUMBER INT, 
    ORIGIN_AIRPORT VARCHAR(100), 
    DESTINATION_AIRPORT VARCHAR(100), 
    DIVERTED INT,
    PRIMARY KEY (MONTH, DAY, AIRLINE, FLIGHT_NUMBER, ORIGIN_AIRPORT, DESTINATION_AIRPORT), # set primary key
    CONSTRAINT fk_diverted_info FOREIGN KEY (MONTH, DAY, AIRLINE, FLIGHT_NUMBER, ORIGIN_AIRPORT, DESTINATION_AIRPORT) #set foreign key and constraint
		REFERENCES schedule_info (MONTH, DAY, AIRLINE, FLIGHT_NUMBER, ORIGIN_AIRPORT, DESTINATION_AIRPORT)
        ON DELETE CASCADE
        ON UPDATE CASCADE
);

# Create cancelled_info table
DROP TABLE IF EXISTS cancelled_info;
CREATE TABLE IF NOT EXISTS cancelled_info(
	MONTH INT, 
    DAY INT, 
    AIRLINE VARCHAR(100), 
    FLIGHT_NUMBER INT, 
    ORIGIN_AIRPORT VARCHAR(100), 
    DESTINATION_AIRPORT VARCHAR(100), 
    CANCELLED INT, 
    CANCELLATION_REASON VARCHAR(100),
    PRIMARY KEY (MONTH, DAY, AIRLINE, FLIGHT_NUMBER, ORIGIN_AIRPORT, DESTINATION_AIRPORT), # set primary key
    CONSTRAINT fk_cancelled_info FOREIGN KEY (MONTH, DAY, AIRLINE, FLIGHT_NUMBER, ORIGIN_AIRPORT, DESTINATION_AIRPORT) #set foreign key and constraint
		REFERENCES schedule_info (MONTH, DAY, AIRLINE, FLIGHT_NUMBER, ORIGIN_AIRPORT, DESTINATION_AIRPORT)
        ON DELETE CASCADE
        ON UPDATE CASCADE
);

# Create delay_info table
DROP TABLE IF EXISTS delay_info;
CREATE TABLE IF NOT EXISTS delay_info(
	MONTH INT, 
    DAY INT, 
    AIRLINE VARCHAR(100), 
    FLIGHT_NUMBER INT, 
    ORIGIN_AIRPORT VARCHAR(100), 
    DESTINATION_AIRPORT VARCHAR(100), 
    SCHEDULED_ARRIVAL TIME, 
    ARRIVAL_TIME TIME, 
    AIR_SYSTEM_DELAY INT, 
    SECURITY_DELAY INT, 
    AIRLINE_DELAY INT, 
    LATE_AIRCRAFT_DELAY INT, 
    WEATHER_DELAY INT,
    PRIMARY KEY (MONTH, DAY, AIRLINE, FLIGHT_NUMBER, ORIGIN_AIRPORT, DESTINATION_AIRPORT), # set primary key
    CONSTRAINT fk_delay_info FOREIGN KEY (MONTH, DAY, AIRLINE, FLIGHT_NUMBER, ORIGIN_AIRPORT, DESTINATION_AIRPORT) #set foreign key and constraint
		REFERENCES schedule_info (MONTH, DAY, AIRLINE, FLIGHT_NUMBER, ORIGIN_AIRPORT, DESTINATION_AIRPORT)
        ON DELETE CASCADE
        ON UPDATE CASCADE
);

-- Changing Data Type Part
SET SQL_SAFE_UPDATES = 0;
-- Change SCHEDULED_DEPARTURE to time
UPDATE flights
SET SCHEDULED_DEPARTURE = NULL
WHERE   SCHEDULED_DEPARTURE = '';

ALTER TABLE flights 
MODIFY COLUMN SCHEDULED_DEPARTURE INT;

UPDATE flights 
SET SCHEDULED_DEPARTURE = CONCAT(SCHEDULED_DEPARTURE, '00')
WHERE  SCHEDULED_DEPARTURE IS NOT NULL ;

ALTER TABLE flights
MODIFY COLUMN SCHEDULED_DEPARTURE TIME;

-- Change SCHEDULED_ARRIVAL to time
UPDATE flights
SET SCHEDULED_ARRIVAL = NULL
WHERE   SCHEDULED_ARRIVAL = '';

ALTER TABLE flights 
MODIFY COLUMN SCHEDULED_ARRIVAL INT;

UPDATE flights 
SET SCHEDULED_ARRIVAL = CONCAT(SCHEDULED_ARRIVAL, '00')
WHERE  SCHEDULED_ARRIVAL IS NOT NULL ;

ALTER TABLE flights
MODIFY COLUMN SCHEDULED_ARRIVAL TIME;

-- Change DEPARTURE_TIME to time
UPDATE flights
SET DEPARTURE_TIME = NULL
WHERE   DEPARTURE_TIME = '';

ALTER TABLE flights 
MODIFY COLUMN DEPARTURE_TIME INT;

UPDATE flights 
SET DEPARTURE_TIME = CONCAT(DEPARTURE_TIME, '00')
WHERE  DEPARTURE_TIME IS NOT NULL ;

ALTER TABLE flights
MODIFY COLUMN DEPARTURE_TIME TIME;

-- Change WHEELS_OFF to time
UPDATE flights
SET WHEELS_OFF = NULL
WHERE   WHEELS_OFF = '';

ALTER TABLE flights 
MODIFY COLUMN WHEELS_OFF INT;

UPDATE flights 
SET WHEELS_OFF = CONCAT(WHEELS_OFF, '00')
WHERE  WHEELS_OFF IS NOT NULL ;

ALTER TABLE flights
MODIFY COLUMN WHEELS_OFF TIME;

-- Change WHEELS_ON to time
UPDATE flights
SET WHEELS_ON = NULL
WHERE   WHEELS_ON = '';

ALTER TABLE flights 
MODIFY COLUMN WHEELS_ON INT;

UPDATE flights 
SET WHEELS_ON = CONCAT(WHEELS_ON, '00')
WHERE  WHEELS_ON IS NOT NULL ;

ALTER TABLE flights
MODIFY COLUMN WHEELS_ON TIME;
 
-- Change ARRIVAL_TIME to time
UPDATE flights
SET ARRIVAL_TIME = NULL
WHERE   ARRIVAL_TIME = '';

ALTER TABLE flights 
MODIFY COLUMN ARRIVAL_TIME INT;

UPDATE flights 
SET ARRIVAL_TIME = CONCAT(ARRIVAL_TIME, '00')
WHERE  ARRIVAL_TIME IS NOT NULL ;

ALTER TABLE flights
MODIFY COLUMN ARRIVAL_TIME TIME;

-- Change DELAYS to INT
UPDATE flights
SET AIR_SYSTEM_DELAY = NULL
WHERE   AIR_SYSTEM_DELAY = '';
ALTER TABLE flights 
MODIFY COLUMN AIR_SYSTEM_DELAY INT;

UPDATE flights
SET SECURITY_DELAY = NULL
WHERE   SECURITY_DELAY = '';
ALTER TABLE flights 
MODIFY COLUMN SECURITY_DELAY INT;

UPDATE flights
SET AIRLINE_DELAY = NULL
WHERE   AIRLINE_DELAY = '';
ALTER TABLE flights 
MODIFY COLUMN AIRLINE_DELAY INT;

UPDATE flights
SET LATE_AIRCRAFT_DELAY = NULL
WHERE   LATE_AIRCRAFT_DELAY = '';
ALTER TABLE flights 
MODIFY COLUMN LATE_AIRCRAFT_DELAY INT;

UPDATE flights
SET WEATHER_DELAY = NULL
WHERE   LATE_AIRCRAFT_DELAY IS NULL;
ALTER TABLE flights 
MODIFY COLUMN WEATHER_DELAY INT;

-- Change time intervals to NULL if the flight cancelled
UPDATE flights
SET DEPARTURE_DELAY = NULL,
	TAXI_OUT = NULL,
	ELAPSED_TIME = NULL,
    AIR_TIME = NULL,
    TAXI_IN = NULL,
    ARRIVAL_DELAY = NULL
WHERE CANCELLED = '1';
ALTER TABLE flights 
MODIFY COLUMN DEPARTURE_DELAY INT;
ALTER TABLE flights 
MODIFY COLUMN TAXI_OUT INT;
ALTER TABLE flights 
MODIFY COLUMN ELAPSED_TIME INT;
ALTER TABLE flights 
MODIFY COLUMN AIR_TIME INT;
ALTER TABLE flights 
MODIFY COLUMN TAXI_IN INT;
ALTER TABLE flights 
MODIFY COLUMN ARRIVAL_DELAY INT;
